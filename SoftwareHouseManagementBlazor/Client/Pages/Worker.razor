@page "/worker"
@using Microsoft.AspNetCore.Authorization
@using SoftwareHouseManagementBlazor.Shared.DTOs.FormModels
@using Microsoft.AspNetCore.Components
@using System.Net
@using Newtonsoft.Json
@using SoftwareHouseManagementBlazor.Shared.DTOs
@inject HttpClient Http

@if (_positions == null)
{
    <p><em>Loading...1</em></p>
}
else
{
    <div class="panel panel-default mt-5" style="width: auto">
        @if (_successBool == true)
        {
            <div class="alert alert-success" role="alert">
                Poprawnie dodano pracownika.
            </div>
        }

        <div class="panel-heading">
            Dodaj pracownika
        </div>
        <div class="panel-body">



            <EditForm Model="@model" OnValidSubmit="@OnValidSubmit">

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Email</label>
                    <div class="col-sm-10">
                        <input type="email" class="form-control" placeholder="Email" name="email" @bind="model.Email">
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Hasło</label>
                    <div class="col-sm-10">
                        <input type="password" class="form-control" placeholder="Hasło" @bind="model.PasswordHash">
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Imię</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" placeholder="Imię" @bind="model.FirstName">
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Nazwisko</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" placeholder="Nazwisko" @bind="model.LastName">
                    </div>
                </div>
                <fieldset class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            <label class="col-form-label">Stanowisko</label>
                        </div>

                        <div class="col-sm-10">
                            <select class="form-control form-control-sm" aria-label="Default select example" @bind="model.positionId">
                                <option selected>Wybierz stanowisko</option>
                                @foreach (var item in _positions)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                </fieldset>

                <div class="form-group row">
                    <div class="col-sm-10">
                        <button type="submit" class="btn btn-primary">Dodaj</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
}






@code {

    private PositionDTO[] _positions;
    private bool _successBool;
    
    WorkerAddModel model = new WorkerAddModel();

    protected override async Task OnInitializedAsync()
    {
        _positions = await Http.GetFromJsonAsync<PositionDTO[]>("api/positions");
    }

    private async Task OnValidSubmit()
    {
        string json = JsonConvert.SerializeObject(model);
        StringContent httpContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        var resp = await Http.PostAsync("api/worker/add", httpContent);
        _successBool = true;
    }

}

